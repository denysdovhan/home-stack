#!/bin/bash

# Check if command exists in $PATH
# USAGE:
#   home-stack::exists <command>
home-stack::exists() {
  command -v "$1" > /dev/null 2>&1
}

# Search all directories up until it finds specified file
# USAGE:
#   home-stack::lookup <command>
home-stack::lookup() {
  x=$(pwd)
  while [ "$x" != "/" ] ; do
    match=$(find "$x" -maxdepth 1 -name "$1")
    if [[ -n "$match" ]]; then
      echo "$match"
      return
    fi
    x=$(dirname "$x")
  done
}

HOME_STACK_ROOT="$(dirname "${BASH_SOURCE[0]}")"

# Menu system starts here
# Display main menu
main_action=$(whiptail --title "Home Stack" --menu --notags \
  "" 20 78 12 -- \
  "install-docker" "Install Docker" \
  "install-ha-supervised" "Install Home Assistant Supervised" \
  "build-containers" "Build Containers" \
  "commands" "Control Containers" \
  3>&1 1>&2 2>&3)

case $main_action in
  'install-docker')
    # shellcheck source=./actions/install-docker.bash
    source "$HOME_STACK_ROOT/actions/install-docker.bash"
  ;;
  'install-ha-supervised')
    # shellcheck source=./actions/install-ha-supervised.bash
    source "$HOME_STACK_ROOT/actions/install-ha-supervised.bash"
  ;;
  'build-containers')
    # shellcheck source=./actions/build-containers.bash
    source "$HOME_STACK_ROOT/actions/build-containers.bash"
  ;;
  'commands')
    # shellcheck source=./actions/commands.bash
    source "$HOME_STACK_ROOT/actions/commands.bash"
  ;;
esac
