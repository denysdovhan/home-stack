#!/bin/bash

# Check if command exists in $PATH
# USAGE:
#   home-stack::exists <command>
home-stack::exists() {
  command -v "$1" > /dev/null 2>&1
}

# Search all directories up until it finds specified file
# USAGE:
#   home-stack::lookup <command>
home-stack::lookup() {
  x=$(pwd)
  while [ "$x" != "/" ] ; do
    match=$(find "$x" -maxdepth 1 -name "$1")
    if [[ -n "$match" ]]; then
      echo "$match"
      return
    fi
    x=$(dirname "$x")
  done
}

HOME_STACK_BIN="$(readlink -f "${BASH_SOURCE[0]}")"
HOME_STACK_DIR="$(dirname "$HOME_STACK_BIN")"

# Menu system starts here
# Display main menu
main_action=$(whiptail --title "Home Stack" --menu --notags \
  "" 20 78 12 -- \
  "init" "Install Docker" \
  "install-ha-supervised" "Install Home Assistant Supervised" \
  "add-containers" "Add Containers" \
  "commands" "Control Containers" \
  "update" "Update Home Stack" \
  3>&1 1>&2 2>&3)

case $main_action in
  'init')
    # shellcheck source=./actions/init.sh
    source "$HOME_STACK_DIR/actions/init.sh"
  ;;
  'install-ha-supervised')
    # shellcheck source=./actions/install-ha-supervised.sh
    source "$HOME_STACK_DIR/actions/install-ha-supervised.sh"
  ;;
  'add-containers')
    # shellcheck source=./actions/add-containers.sh
    source "$HOME_STACK_DIR/actions/add-containers.sh"
  ;;
  'commands')
    # shellcheck source=./actions/commands.sh
    source "$HOME_STACK_DIR/actions/commands.sh"
  ;;
  'update')
    # shellcheck source=./actions/update.sh
    source "$HOME_STACK_DIR/actions/update.sh"
  ;;
esac
